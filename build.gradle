plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.bmuschko.docker-spring-boot-application' version '9.3.4'
}

group = 'com.chrisp1985'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	// https://mvnrepository.com/artifact/mysql/mysql-connector-java
	implementation 'mysql:mysql-connector-java:8.0.33'

	//https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-cache
	implementation 'org.springframework.boot:spring-boot-starter-cache:3.2.3'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.testcontainers:junit-jupiter'
	// https://mvnrepository.com/artifact/org.testcontainers/mysql
	testImplementation 'org.testcontainers:mysql:1.19.6'

	// https://mvnrepository.com/artifact/org.projectlombok/lombok
	compileOnly 'org.projectlombok:lombok:1.18.30'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'

	// https://mvnrepository.com/artifact/io.rest-assured/rest-assured
	testImplementation 'io.rest-assured:rest-assured:5.4.0'


	// https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.1'

	// https://mvnrepository.com/artifact/javax.persistence/javax.persistence-api
	implementation group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'

	implementation 'org.springframework.boot:spring-boot-devtools'
}

tasks.named('test') {
	useJUnitPlatform()
}

docker {
	springBootApplication {
		baseImage = 'openjdk:17.0.1-jdk-slim'
		//ports = [8080]

		images = ["$build_image_name:latest"]
		jvmArgs = ['-Dspring.profiles.active=prod', '-Xmx2048m']
	}
}

// To build, run gradlew build dockerBuildImage
